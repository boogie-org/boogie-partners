# --------------------------------- LICENSE: ----------------------------------
# The file is part of Aste (pronounced "S-T"), an automatic build tool
# originally tailored towards Spec# and Boogie. 
#  
# Copyright (C) 2010  Malte Schwerhoff
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,
# USA.
# --------------------------------- :LICENSE ----------------------------------

#
# Configuration file for the 3rd-party config module available at
# http://www.red-dove.com/config-doc/.
#

HostId: 'CoPM Malte'

# Include private authentication information
Auth: @"aste-auth.cfg"

Paths: {
  # This section only contains the main source code paths. Several subdirectories
  # are hard-coded in the Python script and used relative to these main paths.

  Aste: 'C:\\scmalte\\Aste'
  VisualStudio: 'C:\\Program Files (x86)\\Microsoft Visual Studio 9.0'
  
  CheckoutRoot: 'C:\\Temp\\aste'
  SpecSharp: $Paths.CheckoutRoot + '\\SpecSharp'
  Boogie: $Paths.CheckoutRoot + '\\Boogie'
  SscBoogie: $Paths.CheckoutRoot + '\\SscBoogie'
}

Apps: { 
  regasm: 'c:\\Windows\\Microsoft.NET\\Framework\\v2.0.50727\\RegAsm.exe'
  devenv: $Paths.VisualStudio + '\\Common7\\IDE\\devenv.com'
      # devenv.exe won't work!
  nmake: $Paths.VisualStudio + '\\VC\\bin\\nmake.exe'
  svn: 'C:\\Program Files\\SlikSvn\\bin\\svn.exe'
      # Any cli svn client, e.g. http://www.sliksvn.com/en/download
}

Logging: {
  Root: 'C:\\Temp\\aste\\logs'
  VerboseLog: $Logging.Root + '\\verbose.log'
  SummaryLog: $Logging.Root + '\\summary.log'
  Backups: 10000 # Keep the last n log files.
}



# -----------------------------------------------------------------------------
# There shouldn't be any machine-dependend values (e.g. absolute paths) below
# this point, hence it is usually sufficient to edit the above lines when
# setting up Aste on another computer.
# -----------------------------------------------------------------------------


Flags: {
  Tests: False          # Run tests?
  ShortTestsOnly: False # Omit long tests?
  Stderr: True          # Also log to stderr?
  CheckinTests: False   # Run the SpecSharp Checkin Tests? (requires Tests=True)
  Dafny: True           # Include Dafny?
  SscBoogie: True       # Include SscBoogie?
  UploadTheBuild: False # Should the build be uploaded to CodePlex?
  UploadSummary: False  # Upload the summary file?
}

SVN: { 
  Update: True # Update or clean checkout
  SpecSharp: 'https://specsharp.svn.codeplex.com/svn/SpecSharp'
  Boogie: 'https://boogie.svn.codeplex.com/svn'
  SscBoogie: 'https://specsharp.svn.codeplex.com/svn/SscBoogie'
}

CommitSummary: {
  # For each project
  #
  #   To: The repository-url to which the summary will be committed, if
  #       it has changed.
  #
  #       ATTENTION: The url must already exist!
  # 
  #   From: A path to which the To: directory will be checked-out to
  #         diff the summary in the repository against the current one, and
  #         from where the current summary will be committed, if it changed.
  #
  #         ATTENTION: The folder will be deleted (if existing) and recreated
  #         before the repository summary is checked-out!
  #
  #   User: An SVN user that has the necessay rights to perform a commit.
  #
  #   Password: The SVN user's password.  
  #
  #   ViewUrl: A link to the head revision of the summary to directly open
  #            it in a browser. Comment/remove to suppress it.
  
  SpecSharp: {
#    To: 'https://specsharp.svn.codeplex.com/svn/_admin/SpecSharp/aste'
    To: 'https://sandkasten.svn.codeplex.com/svn/_admin/SpecSharp/aste'
    From: $Paths.CheckoutRoot + '\\summaries\\SpecSharp'
    User: $Auth.SVN.CommitSummary.User
    Password: $Auth.SVN.CommitSummary.Password
    ViewUrl: 'http://tinyurl.com/sscsummary'
  }
  Boogie: {
#    To: 'https://boogie.svn.codeplex.com/svn/_admin/Boogie/aste'
    To: 'https://sandkasten.svn.codeplex.com/svn/_admin/Boogie/aste'
    From: $Paths.CheckoutRoot + '\\summaries\\Boogie'
    User: $Auth.SVN.CommitSummary.User
    Password: $Auth.SVN.CommitSummary.Password
  }
  SscBoogie: {
#    To: 'https://specsharp.svn.codeplex.com/svn/_admin/SscBoogie/aste'
    To: 'https://sandkasten.svn.codeplex.com/svn/_admin/SscBoogie/aste'
    From: $Paths.CheckoutRoot + '\\summaries\\SscBoogie'
    User: $Auth.SVN.CommitSummary.User
    Password: $Auth.SVN.CommitSummary.Password
  }
}

Nightlies: {
  SoapUrl: 'https://www.codeplex.com/Services/ReleaseService.asmx?WSDL'
  SpecSharp: {
#    Project: 'specsharp'
    Project: 'sandkasten'
    User: $Auth.CodePlex.Default.User
    Password: $Auth.CodePlex.Default.Password
 }
  Boogie: {
#    Project: 'boogie'
    Project: 'sandkasten'
    User: $Auth.CodePlex.Default.User
    Password: $Auth.CodePlex.Default.Password
 }
  SscBoogie: {
#    Project: 'specsharp'
    Project: 'sandkasten'
    User: $Auth.CodePlex.Default.User
    Password: $Auth.CodePlex.Default.Password
  }
}

Mail: {
  Host: 'smtp.googlemail.com'
  Port: 587
  TLS: True 
  User: $Auth.Mail.Default.User
  Password: $Auth.Mail.Default.Password
# Recipients: [
#  'Malte Schwerhoff <mschwerhoff@student.ethz.ch>',
#  'Valentin Wüstholz <valentin.wuestholz@inf.ethz.ch>',
#  'Peter Müller <peter.mueller@inf.ethz.ch>'
# ]
  Recipients: ['Malte Schwerhoff <mschwerhoff@student.ethz.ch>']    
  Sender: 'Astebot <astebot@gmail.com>'
}

Timings: {
  JSON: $Paths.Aste + '\\bolzer\\timings.json'
  CSV:  $Paths.Aste + '\\bolzer\\timings.csv'
}
